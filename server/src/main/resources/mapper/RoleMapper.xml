<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 定义一个映射配置文件的根节点 -->
<!-- namespace 属性用来定义配置命名空间， 主要进行 session 级别的缓存管理 -->
<!-- namespace 默认使用当前操作实体类的全路径 -->
<mapper namespace="com.kiss.account.mapper.RoleMapper">

    <insert id="createRole" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.kiss.account.entity.Role">
        insert into roles(name, type, status, remark, operatorId, operatorName, operatorIp)
        values(#{name}, #{type}, #{status}, #{remark}, #{operatorId}, #{operatorName}, #{operatorIp});
    </insert>

    <select id="getRoles" resultType="com.kiss.account.entity.Role">
        select * from roles;
    </select>

    <insert id="bindPermissionToRole" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.kiss.account.entity.RolePermission">
        insert into rolepermissions(roleId, permissionId, limitScope, operatorId, operatorName, operatorIp)
        values(#{roleId}, #{permissionId}, #{limitScope}, #{operatorId}, #{operatorName}, #{operatorIp});
    </insert>

    <insert id="bindPermissionsToRole" useGeneratedKeys="true" keyProperty="id"
            parameterType="java.util.List">
        insert into rolepermissions(roleId, permissionId, limitScope, operatorId, operatorName, operatorIp)
        values
        <foreach collection="list" item="permission" index="index" separator=",">
            (#{permission.roleId}, #{permission.permissionId}, #{permission.limitScope}, #{permission.operatorId}, #{permission.operatorName}, #{permission.operatorIp})
        </foreach>
    </insert>

    <select id="getRolesPermissionIds" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select permissionId from rolepermissions where roleId=#{id};
    </select>

    <select id="getRolesAccountIds" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select accountId from accountroles where roleId=#{id};
    </select>

    <select id="getRoleById" parameterType="java.lang.Integer" resultType="com.kiss.account.entity.Role">
        select * from roles where name=#{id} limit 0,1;
    </select>

    <select id="getRoleByName" parameterType="java.lang.String" resultType="com.kiss.account.entity.Role">
        select * from roles where name=#{name} limit 0,1;
    </select>

    <update id="putRole" parameterType="com.kiss.account.output.RoleOutput">
        update roles
        set id = #{id}
        <if test="name != null and name != ''">
            ,name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="status != null">
            ,status = #{status,jdbcType=INTEGER}
        </if>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <delete id="deleteRole" parameterType="java.lang.Integer">
        delete from roles where id = #{id}
    </delete>

    <delete id="deleteRolePermissions" parameterType="java.lang.Integer">
        delete from rolepermissions where roleId=#{id}
    </delete>

    <delete id="deleteRoleAccounts" parameterType="java.lang.Integer">
        delete from accountroles where roleId=#{id}
    </delete>


</mapper>